<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ucMonAn1.hinhAnh" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="MaMonAn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="TenMonAn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Gia.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>